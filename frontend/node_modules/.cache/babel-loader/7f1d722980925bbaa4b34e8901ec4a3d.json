{"ast":null,"code":"import _regeneratorRuntime from\"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useEffect,useState}from\"react\";import{Col,ControlLabel,FormControl,FormGroup,Grid,Row}from\"react-bootstrap\";import LoaderButton from\"../components/LoaderButton\";import{useFormFields}from\"../libs/hooksLib\";import config from\"../config\";import Cookie from\"js-cookie\";export default function Settings(props){var _useFormFields=useFormFields({password:\"\",confirmPassword:\"\"}),_useFormFields2=_slicedToArray(_useFormFields,2),fields=_useFormFields2[0],handleFieldChange=_useFormFields2[1];var _useState=useState(-1),_useState2=_slicedToArray(_useState,2),maxStaples=_useState2[0],setMaxStaples=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];function handleSubmit(event){return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();setIsLoading(true);try{fetch(config.HOST+'/rest/api/1/user/max-staples',{method:'POST',headers:{'Content-Type':'application/json','Authorization':'Bearer '+Cookie.get('token')},body:JSON.stringify({max_staples:maxStaples})}).then(function(response){if(response.status===200){alert(\"New staple count of \".concat(maxStaples,\" successfully set.\"));window.location.reload();}else{alert(\"Response was: \"+response.statusText);}}).catch(function(error){alert(error.message);});}catch(e){alert(e.message);}finally{setIsLoading(false);}case 3:case\"end\":return _context.stop();}}});}function validateChangePasswordForm(){return fields.password.length>0&&fields.password===fields.confirmPassword;}function handleChangePasswordSubmit(event){return _regeneratorRuntime.async(function handleChangePasswordSubmit$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();setIsLoading(true);try{fetch(config.HOST+'/rest/api/1/user/change-password',{method:'POST',headers:{'Content-Type':'application/json','Authorization':'Bearer '+Cookie.get('token')},body:JSON.stringify({password:fields.password})}).then(function(response){if(response.status===200){alert(\"Please log in with your new password.\");props.userHasAuthenticated(false);props.history.push(\"/login\");}else{alert(\"Response was: \"+response.statusText);}}).catch(function(error){alert(error.message);});}catch(e){alert(e.message);}finally{setIsLoading(false);}case 3:case\"end\":return _context2.stop();}}});}function editMaxStaples(event){setMaxStaples(event.target.value);}function validateForm(){return true;}useEffect(function(){function onLoad(){return _regeneratorRuntime.async(function onLoad$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:try{fetch(config.HOST+\"/rest/api/1/user/max-staples\",{method:'GET',headers:{'Content-Type':'application/json','Authorization':'Bearer '+Cookie.get('token')}}).then(function(response){return response.json();}).then(function(data){return setMaxStaples(data.max_staples);}).catch(function(e){return alert(e.message);});}catch(e){alert(e);}setIsLoading(false);case 2:case\"end\":return _context3.stop();}}});}onLoad();},[]);return React.createElement(Grid,null,React.createElement(Row,{className:\"show-grid\"},React.createElement(Col,{xs:12,md:8},maxStaples===-1?React.createElement(Fragment,null):React.createElement(\"form\",{className:\"SettingsForm\",onSubmit:handleSubmit},React.createElement(FormGroup,{bsSize:\"large\",controlId:\"storage\"},React.createElement(ControlLabel,null,\"Maximum Staples\"),React.createElement(FormControl,{min:\"0\",type:\"number\",value:maxStaples,onChange:editMaxStaples,placeholder:\"Number of maximum staples to store\"})),React.createElement(\"hr\",null),React.createElement(LoaderButton,{block:true,type:\"submit\",bsSize:\"large\",isLoading:isLoading,disabled:!validateForm()},\"Save\"))),React.createElement(Col,{xs:6,md:4},React.createElement(\"form\",{className:\"ChangePasswordForm\",onSubmit:handleChangePasswordSubmit},React.createElement(FormGroup,{controlId:\"password\",bsSize:\"large\"},React.createElement(ControlLabel,null,\"New password\"),React.createElement(FormControl,{type:\"password\",value:fields.password,onChange:handleFieldChange})),React.createElement(FormGroup,{controlId:\"confirmPassword\",bsSize:\"large\"},React.createElement(ControlLabel,null,\"Confirm new password\"),React.createElement(FormControl,{type:\"password\",onChange:handleFieldChange,value:fields.confirmPassword})),React.createElement(\"hr\",null),React.createElement(LoaderButton,{block:true,type:\"submit\",bsSize:\"large\",isLoading:isLoading,disabled:!validateChangePasswordForm()},\"Change\")))));}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js"],"names":["React","Fragment","useEffect","useState","Col","ControlLabel","FormControl","FormGroup","Grid","Row","LoaderButton","useFormFields","config","Cookie","Settings","props","password","confirmPassword","fields","handleFieldChange","maxStaples","setMaxStaples","isLoading","setIsLoading","handleSubmit","event","preventDefault","fetch","HOST","method","headers","get","body","JSON","stringify","max_staples","then","response","status","alert","window","location","reload","statusText","catch","error","message","e","validateChangePasswordForm","length","handleChangePasswordSubmit","userHasAuthenticated","history","push","editMaxStaples","target","value","validateForm","onLoad","json","data"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from \"react\";\nimport {Col, ControlLabel, FormControl, FormGroup, Grid, Row} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport {useFormFields} from \"../libs/hooksLib\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\n\nexport default function Settings(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [maxStaples, setMaxStaples] = useState(-1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      fetch(config.HOST+'/rest/api/1/user/max-staples', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + Cookie.get('token'),\n        },\n        body: JSON.stringify({\n          max_staples: maxStaples,\n        }),\n      }).then((response) => {\n        if (response.status === 200) {\n          alert(`New staple count of ${maxStaples} successfully set.`);\n          window.location.reload();\n        } else {\n          alert(\"Response was: \" + response.statusText);\n        }\n      }).catch((error) => {\n        alert(error.message);\n      })\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function validateChangePasswordForm() {\n    return (\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleChangePasswordSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      fetch(config.HOST+'/rest/api/1/user/change-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + Cookie.get('token'),\n        },\n        body: JSON.stringify({\n          password: fields.password,\n        }),\n      }).then((response) => {\n        if (response.status === 200) {\n          alert(\"Please log in with your new password.\");\n          props.userHasAuthenticated(false);\n          props.history.push(\"/login\");\n        } else {\n          alert(\"Response was: \" + response.statusText);\n        }\n      }).catch((error) => {\n        alert(error.message);\n      })\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function editMaxStaples(event) {\n    setMaxStaples(event.target.value)\n  }\n\n  function validateForm() {\n    return true\n  }\n\n  useEffect(() => {\n    async function onLoad() {\n      try {\n        fetch(config.HOST+\"/rest/api/1/user/max-staples\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token'),\n          },\n        }).then(response => response.json())\n          .then(data => setMaxStaples(data.max_staples))\n          .catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, []);\n\n  return (\n    <Grid>\n      <Row className=\"show-grid\">\n        <Col xs={12} md={8}>\n          {maxStaples === -1 ? <Fragment/> : <form className=\"SettingsForm\" onSubmit={handleSubmit}>\n              <FormGroup bsSize=\"large\" controlId=\"storage\">\n                <ControlLabel>Maximum Staples</ControlLabel>\n                <FormControl\n                  min=\"0\"\n                  type=\"number\"\n                  value={maxStaples}\n                  onChange={editMaxStaples}\n                  placeholder=\"Number of maximum staples to store\"\n                />\n              </FormGroup>\n              <hr/>\n              <LoaderButton\n                block\n                type=\"submit\"\n                bsSize=\"large\"\n                isLoading={isLoading}\n                disabled={!validateForm()}\n              >\n                Save\n              </LoaderButton>\n            </form>\n          }\n        </Col>\n        <Col xs={6} md={4}>\n          <form className=\"ChangePasswordForm\" onSubmit={handleChangePasswordSubmit}>\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              <ControlLabel>New password</ControlLabel>\n              <FormControl\n                type=\"password\"\n                value={fields.password}\n                onChange={handleFieldChange}\n              />\n            </FormGroup>\n            <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n              <ControlLabel>Confirm new password</ControlLabel>\n              <FormControl\n                type=\"password\"\n                onChange={handleFieldChange}\n                value={fields.confirmPassword}\n              />\n            </FormGroup>\n            <hr />\n            <LoaderButton\n              block\n              type=\"submit\"\n              bsSize=\"large\"\n              isLoading={isLoading}\n              disabled={!validateChangePasswordForm()}\n            >\n              Change\n            </LoaderButton>\n          </form>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}