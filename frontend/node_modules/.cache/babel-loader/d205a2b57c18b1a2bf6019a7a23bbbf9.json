{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Col, ControlLabel, FormControl, FormGroup, Grid, Row } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\nexport default function Settings(props) {\n  const _useFormFields = useFormFields({\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useFormFields2 = _slicedToArray(_useFormFields, 2),\n        fields = _useFormFields2[0],\n        handleFieldChange = _useFormFields2[1];\n\n  const _useState = useState(25),\n        _useState2 = _slicedToArray(_useState, 2),\n        maxStaples = _useState2[0],\n        setMaxStaples = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      fetch(config.HOST + '/rest/api/1/user/max-staples', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + Cookie.get('token')\n        },\n        body: JSON.stringify({\n          max_staples: maxStaples\n        })\n      }).then(response => {\n        if (response.status === 200) {\n          alert(`New staple count of ${maxStaples} successfully set.`);\n          window.location.reload();\n        } else {\n          alert(\"Response was: \" + response.statusText);\n        }\n      }).catch(error => {\n        alert(error.message);\n      });\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function validateChangePasswordForm() {\n    return fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  async function handleChangePasswordSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      fetch(config.HOST + '/rest/api/1/user/change-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + Cookie.get('token')\n        },\n        body: JSON.stringify({\n          password: fields.password\n        })\n      }).then(response => {\n        if (response.status === 200) {\n          alert(\"Please log in with your new password.\");\n          props.userHasAuthenticated(false);\n          props.history.push(\"/login\");\n        } else {\n          alert(\"Response was: \" + response.statusText);\n        }\n      }).catch(error => {\n        alert(error.message);\n      });\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function editMaxStaples(event) {\n    setMaxStaples(event.target.value);\n  }\n\n  function validateForm() {\n    return true;\n  }\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n\n      try {\n        fetch(config.HOST + \"/rest/api/1/staple\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token')\n          }\n        }).then(response => response.json()).then(data => setStaples(data)).catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      try {\n        fetch(config.HOST + \"/rest/api/1/staple/next\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token')\n          }\n        }).then(response => response.json()).then(data => setNextStaple(data)).catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, [props.isAuthenticated, isLoading, isDeleting]);\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"SettingsForm\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    bsSize: \"large\",\n    controlId: \"storage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Maximum Staples\"), React.createElement(FormControl, {\n    min: \"0\",\n    type: \"number\",\n    value: maxStaples,\n    onChange: editMaxStaples,\n    placeholder: \"Number of maximum staples to store\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Col, {\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"ChangePasswordForm\",\n    onSubmit: handleChangePasswordSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"New password\"), React.createElement(FormControl, {\n    type: \"password\",\n    value: fields.password,\n    onChange: handleFieldChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"confirmPassword\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Confirm new password\"), React.createElement(FormControl, {\n    type: \"password\",\n    onChange: handleFieldChange,\n    value: fields.confirmPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateChangePasswordForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Change\")))));\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js"],"names":["React","useEffect","useState","Col","ControlLabel","FormControl","FormGroup","Grid","Row","LoaderButton","useFormFields","config","Cookie","Settings","props","password","confirmPassword","fields","handleFieldChange","maxStaples","setMaxStaples","isLoading","setIsLoading","handleSubmit","event","preventDefault","fetch","HOST","method","headers","get","body","JSON","stringify","max_staples","then","response","status","alert","window","location","reload","statusText","catch","error","message","e","validateChangePasswordForm","length","handleChangePasswordSubmit","userHasAuthenticated","history","push","editMaxStaples","target","value","validateForm","onLoad","isAuthenticated","json","data","setStaples","setNextStaple","isDeleting"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Col, ControlLabel, FormControl, FormGroup, Grid, Row} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport {useFormFields} from \"../libs/hooksLib\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\n\nexport default function Settings(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [maxStaples, setMaxStaples] = useState(25);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      fetch(config.HOST+'/rest/api/1/user/max-staples', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + Cookie.get('token'),\n        },\n        body: JSON.stringify({\n          max_staples: maxStaples,\n        }),\n      }).then((response) => {\n        if (response.status === 200) {\n          alert(`New staple count of ${maxStaples} successfully set.`);\n          window.location.reload();\n        } else {\n          alert(\"Response was: \" + response.statusText);\n        }\n      }).catch((error) => {\n        alert(error.message);\n      })\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function validateChangePasswordForm() {\n    return (\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleChangePasswordSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      fetch(config.HOST+'/rest/api/1/user/change-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + Cookie.get('token'),\n        },\n        body: JSON.stringify({\n          password: fields.password,\n        }),\n      }).then((response) => {\n        if (response.status === 200) {\n          alert(\"Please log in with your new password.\");\n          props.userHasAuthenticated(false);\n          props.history.push(\"/login\");\n        } else {\n          alert(\"Response was: \" + response.statusText);\n        }\n      }).catch((error) => {\n        alert(error.message);\n      })\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function editMaxStaples(event) {\n    setMaxStaples(event.target.value)\n  }\n\n  function validateForm() {\n    return true\n  }\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n\n      try {\n        fetch(config.HOST+\"/rest/api/1/staple\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token'),\n          },\n        }).then(response => response.json())\n          .then(data => setStaples(data))\n          .catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      try {\n        fetch(config.HOST+\"/rest/api/1/staple/next\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token'),\n          },\n        }).then(response => response.json())\n          .then(data => setNextStaple(data))\n          .catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, [props.isAuthenticated, isLoading, isDeleting]);\n\n  return (\n    <Grid>\n      <Row className=\"show-grid\">\n        <Col xs={12} md={8}>\n          <form className=\"SettingsForm\" onSubmit={handleSubmit}>\n            <FormGroup bsSize=\"large\" controlId=\"storage\">\n              <ControlLabel>Maximum Staples</ControlLabel>\n              <FormControl\n                min=\"0\"\n                type=\"number\"\n                value={maxStaples}\n                onChange={editMaxStaples}\n                placeholder=\"Number of maximum staples to store\"\n              />\n            </FormGroup>\n            <hr />\n            <LoaderButton\n              block\n              type=\"submit\"\n              bsSize=\"large\"\n              isLoading={isLoading}\n              disabled={!validateForm()}\n            >\n              Save\n            </LoaderButton>\n          </form>\n        </Col>\n        <Col xs={6} md={4}>\n          <form className=\"ChangePasswordForm\" onSubmit={handleChangePasswordSubmit}>\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              <ControlLabel>New password</ControlLabel>\n              <FormControl\n                type=\"password\"\n                value={fields.password}\n                onChange={handleFieldChange}\n              />\n            </FormGroup>\n            <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n              <ControlLabel>Confirm new password</ControlLabel>\n              <FormControl\n                type=\"password\"\n                onChange={handleFieldChange}\n                value={fields.confirmPassword}\n              />\n            </FormGroup>\n            <hr />\n            <LoaderButton\n              block\n              type=\"submit\"\n              bsSize=\"large\"\n              isLoading={isLoading}\n              disabled={!validateChangePasswordForm()}\n            >\n              Change\n            </LoaderButton>\n          </form>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}