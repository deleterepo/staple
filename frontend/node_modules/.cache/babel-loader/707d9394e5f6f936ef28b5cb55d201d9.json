{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js\";\nimport React, { useState } from \"react\";\nimport { ControlLabel, FormControl, FormGroup } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\nexport default function Settings(props) {\n  const _useFormFields = useFormFields({\n    maximumStaples: 25\n  }),\n        _useFormFields2 = _slicedToArray(_useFormFields, 2),\n        fields = _useFormFields2[0],\n        handleFieldChange = _useFormFields2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isResetting = _useState4[0],\n        setIsResetting = _useState4[1];\n\n  function handleSubmitClick() {\n    setIsLoading(true);\n  }\n\n  function validateForm() {\n    return true;\n  }\n\n  function resetPassword() {\n    setIsResetting(true);\n\n    try {\n      fetch(config.HOST + \"/user/reset\", {\n        method: 'PATCH',\n        headers: {\n          'Authorization': 'Bearer ' + Cookie.get(\"token\")\n        }\n      }).then(response => {\n        if (response.ok) {\n          setIsResetting(false);\n          Cookie.remove(\"token\");\n          props.history.push(\"/login\");\n          window.location.reload();\n        } else {\n          setIsResetting(false);\n          alert(\"Failed to reset password.\");\n        }\n      }).catch(e => {\n        alert(e.message);\n        setIsResetting(false);\n      });\n    } catch (e) {\n      alert(e);\n      setIsResetting(false);\n    }\n  }\n\n  return React.createElement(\"form\", {\n    className: \"SettingsForm\",\n    onSubmit: handleSubmitClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    bsSize: \"large\",\n    controlId: \"storage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Storage\"), React.createElement(FormControl, {\n    min: \"0\",\n    type: \"number\",\n    value: fields.maximumStaples,\n    onChange: handleFieldChange,\n    placeholder: \"Number of maximum staples to store\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"danger\",\n    bsSize: \"large\",\n    isLoading: isResetting,\n    onClick: resetPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Reset Password\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Save\"));\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js"],"names":["React","useState","ControlLabel","FormControl","FormGroup","useFormFields","LoaderButton","config","Cookie","Settings","props","maximumStaples","fields","handleFieldChange","isLoading","setIsLoading","isResetting","setIsResetting","handleSubmitClick","validateForm","resetPassword","fetch","HOST","method","headers","get","then","response","ok","remove","history","push","window","location","reload","alert","catch","e","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {ControlLabel, FormControl, FormGroup} from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\n\nexport default function Settings(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    maximumStaples: 25,\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isResetting, setIsResetting] = useState(false);\n\n  function handleSubmitClick() {\n    setIsLoading(true);\n  }\n\n  function validateForm() {\n    return true\n  }\n\n  function resetPassword() {\n    setIsResetting(true);\n    try {\n      fetch(config.HOST+\"/user/reset\", {\n        method: 'PATCH',\n        headers: {\n          'Authorization': 'Bearer ' + Cookie.get(\"token\"),\n        }\n      }).then(response => {\n        if (response.ok) {\n          setIsResetting(false);\n          Cookie.remove(\"token\");\n          props.history.push(\"/login\");\n          window.location.reload();\n        } else {\n          setIsResetting(false);\n          alert(\"Failed to reset password.\");\n        }\n      }).catch(e => {\n        alert(e.message);\n        setIsResetting(false)\n      })\n    } catch (e) {\n      alert(e);\n      setIsResetting(false);\n    }\n  }\n\n  return (\n    <form className=\"SettingsForm\" onSubmit={handleSubmitClick}>\n      <FormGroup bsSize=\"large\" controlId=\"storage\">\n        <ControlLabel>Storage</ControlLabel>\n        <FormControl\n          min=\"0\"\n          type=\"number\"\n          value={fields.maximumStaples}\n          onChange={handleFieldChange}\n          placeholder=\"Number of maximum staples to store\"\n        />\n        <LoaderButton\n          block\n          type=\"danger\"\n          bsSize=\"large\"\n          isLoading={isResetting}\n          onClick={resetPassword}\n        >\n          Reset Password\n        </LoaderButton>\n      </FormGroup>\n      <hr />\n      <LoaderButton\n        block\n        type=\"submit\"\n        bsSize=\"large\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Save\n      </LoaderButton>\n    </form>\n  );\n}"]},"metadata":{},"sourceType":"module"}