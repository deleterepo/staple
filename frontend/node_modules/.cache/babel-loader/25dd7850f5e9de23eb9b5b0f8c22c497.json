{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/AddStaple.js\";\nimport React, { useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./AddStaple.css\";\nimport config from \"../config\";\nexport default function AddStaple(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        title = _useState4[0],\n        setTitle = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isLoading = _useState6[0],\n        setIsLoading = _useState6[1];\n\n  function validateForm() {\n    return content.length > 0 && title.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    // Call the api to create a staple.\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      setIsLoading(false);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"AddStaple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    value: content,\n    componentClass: \"textarea\",\n    onChange: e => setContent(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    bsStyle: \"primary\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Create\")));\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/AddStaple.js"],"names":["React","useState","FormGroup","FormControl","ControlLabel","LoaderButton","config","AddStaple","props","content","setContent","title","setTitle","isLoading","setIsLoading","validateForm","length","handleSubmit","event","preventDefault","history","push","e","alert","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,QAAqD,iBAArD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,oBACTP,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAChCQ,OADgC;AAAA,QACvBC,UADuB;;AAAA,qBAEbT,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,QAEhCU,KAFgC;AAAA,QAEzBC,QAFyB;;AAAA,qBAGLX,QAAQ,CAAC,KAAD,CAHH;AAAA;AAAA,QAGhCY,SAHgC;AAAA,QAGrBC,YAHqB;;AAKvC,WAASC,YAAT,GAAwB;AACtB,WAAON,OAAO,CAACO,MAAR,GAAiB,CAAjB,IAAsBL,KAAK,CAACK,MAAN,GAAe,CAA5C;AACD;;AAGD,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AACjC;AACAA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AAEFA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,MAAAA,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAEN,KAAhC;AAAuC,IAAA,QAAQ,EAAEW,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEhB,OADT;AAEE,IAAA,cAAc,EAAC,UAFjB;AAGE,IAAA,QAAQ,EAAEa,CAAC,IAAIZ,UAAU,CAACY,CAAC,CAACE,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAWE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,OAAO,EAAC,SAJV;AAKE,IAAA,SAAS,EAAEZ,SALb;AAME,IAAA,QAAQ,EAAE,CAACE,YAAY,EANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF,CADF;AA0BD","sourcesContent":["import React, { useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./AddStaple.css\";\nimport config from \"../config\";\n\nexport default function AddStaple(props) {\n  const [content, setContent] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0 && title.length > 0;\n  }\n\n\n  async function handleSubmit(event) {\n    // Call the api to create a staple.\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n\n      setIsLoading(false);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"AddStaple\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"Title\">\n          <FormControl type=\"text\" value={title} onChange={e => setTitle(e.target.value)}/>\n        </FormGroup>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}