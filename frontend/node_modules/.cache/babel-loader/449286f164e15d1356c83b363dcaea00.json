{"ast":null,"code":"import _regeneratorRuntime from\"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{FormGroup,FormControl,ControlLabel}from\"react-bootstrap\";import LoaderButton from\"../components/LoaderButton\";import{useFormFields}from\"../libs/hooksLib\";import\"./Signup.css\";import config from\"../config\";import Cookie from\"js-cookie\";export default function Signup(props){var _useFormFields=useFormFields({email:\"\",password:\"\",confirmPassword:\"\"}),_useFormFields2=_slicedToArray(_useFormFields,2),fields=_useFormFields2[0],handleFieldChange=_useFormFields2[1];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),newUser=_useState2[0],setNewUser=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];function validateForm(){return fields.email.length>0&&fields.password.length>0&&fields.password===fields.confirmPassword;}function getToken(){try{fetch(config.HOST+'/get-token',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:fields.email,password:fields.password})}).then(function(response){if(response.ok){response.json().then(function(responseJson){// store the token in a cookie.\nCookie.set(\"token\",responseJson.token);});}else{alert(\"Login failed.\");}}).catch(function(error){alert(error.message);});// probably will create a state and store it in state/\n}catch(e){alert(e.message);}finally{setIsLoading(false);}}function handleSubmit(event){return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();setIsLoading(true);try{fetch(config.HOST+'/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:fields.email,password:fields.password})}).then(function(response){if(response.status===200){getToken();setNewUser(newUser);props.userHasAuthenticated(true);props.history.push(\"/\");}else{alert(\"Response was: \"+response.statusText);}}).catch(function(error){alert(error.message);});}catch(e){alert(e.message);}finally{setIsLoading(false);}case 3:case\"end\":return _context.stop();}}});}function renderForm(){return React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(FormGroup,{controlId:\"email\",bsSize:\"large\"},React.createElement(ControlLabel,null,\"Email\"),React.createElement(FormControl,{autoFocus:true,type:\"email\",value:fields.email,onChange:handleFieldChange})),React.createElement(FormGroup,{controlId:\"password\",bsSize:\"large\"},React.createElement(ControlLabel,null,\"Password\"),React.createElement(FormControl,{type:\"password\",value:fields.password,onChange:handleFieldChange})),React.createElement(FormGroup,{controlId:\"confirmPassword\",bsSize:\"large\"},React.createElement(ControlLabel,null,\"Confirm Password\"),React.createElement(FormControl,{type:\"password\",onChange:handleFieldChange,value:fields.confirmPassword})),React.createElement(LoaderButton,{block:true,type:\"submit\",bsSize:\"large\",isLoading:isLoading,disabled:!validateForm()},\"Signup\"));}return React.createElement(\"div\",{className:\"Signup\"},renderForm());}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Signup.js"],"names":["React","useState","FormGroup","FormControl","ControlLabel","LoaderButton","useFormFields","config","Cookie","Signup","props","email","password","confirmPassword","fields","handleFieldChange","newUser","setNewUser","isLoading","setIsLoading","validateForm","length","getToken","fetch","HOST","method","headers","body","JSON","stringify","then","response","ok","json","responseJson","set","token","alert","catch","error","message","e","handleSubmit","event","preventDefault","status","userHasAuthenticated","history","push","statusText","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function getToken() {\n    try {\n      fetch(config.HOST+'/get-token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: fields.email,\n          password: fields.password,\n        }),\n      }).then((response) => {\n        if (response.ok) {\n          response.json().then(responseJson => {\n            // store the token in a cookie.\n            Cookie.set(\"token\", responseJson.token);\n          })\n        } else {\n          alert(\"Login failed.\")\n        }\n      })\n        .catch((error) => {\n          alert(error.message);\n        });\n      // probably will create a state and store it in state/\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      fetch(config.HOST+'/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: fields.email,\n          password: fields.password,\n        }),\n      }).then((response) => {\n        if (response.status === 200) {\n          getToken();\n          setNewUser(newUser);\n          props.userHasAuthenticated(true);\n          props.history.push(\"/\");\n        } else {\n          alert(\"Response was: \" + response.statusText);\n        }\n      })\n        .catch((error) => {\n          alert(error.message);\n        })\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function renderForm() {\n    return (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {renderForm()}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}