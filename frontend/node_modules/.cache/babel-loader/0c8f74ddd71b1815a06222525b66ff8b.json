{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { FormControl, FormGroup, ListGroup, ListGroupItem, PageHeader } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./Home.css\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\nimport LoaderButton from \"../components/LoaderButton\";\nexport default function Home(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        staples = _useState2[0],\n        setStaples = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        nextStaple = _useState4[0],\n        setNextStaple = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isLoading = _useState6[0],\n        setIsLoading = _useState6[1];\n\n  function renderStapleView(astaples) {\n    let list = undefined;\n\n    if (astaples.staples) {\n      list = astaples.staples.map(staple => {\n        return React.createElement(LinkContainer, {\n          key: staple.id,\n          to: `/staples/${staple.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(ListGroupItem, {\n          header: staple.name,\n          key: staple.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Created: \" + new Date(staple.created_at).toLocaleString()));\n      });\n    }\n\n    let s = {};\n\n    if (nextStaple.staple) {\n      s = React.createElement(\"div\", {\n        className: \"Staples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, staple && React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        plaintext: nextStaple.staple.content,\n        readOnly: true,\n        defaultValue: nextStaple.staple.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(LoaderButton, {\n        block: true,\n        bsSize: \"large\",\n        bsStyle: \"warning\" // onClick={handleArchive}\n        // isLoading={isLoading}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Archive\"), React.createElement(LoaderButton, {\n        block: true,\n        bsSize: \"large\",\n        bsStyle: \"danger\" // onClick={handleDelete}\n        // isLoading={isDeleting}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, s), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, list, React.createElement(LinkContainer, {\n      key: \"new\",\n      to: \"/staples/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\uFF0B\"), \" Create a new staple\")))));\n  }\n\n  function renderLander() {\n    return React.createElement(\"div\", {\n      className: \"lander\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Staple\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"A stack based bookmark.\"));\n  }\n\n  function renderStaples() {\n    return React.createElement(\"div\", {\n      className: \"staples\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Your Staples\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, !isLoading && renderStapleView(staples)));\n  }\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n\n      try {\n        fetch(config.HOST + \"/rest/api/1/staple\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token')\n          }\n        }).then(response => response.json()).then(data => setStaples(data)).catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      try {\n        fetch(config.HOST + \"/rest/api/1/staple/next\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token')\n          }\n        }).then(response => response.json()).then(data => setNextStaple(data)).catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, [props.isAuthenticated]);\n  return React.createElement(\"div\", {\n    className: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, props.isAuthenticated ? renderStaples() : renderLander());\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Home.js"],"names":["React","useEffect","useState","FormControl","FormGroup","ListGroup","ListGroupItem","PageHeader","LinkContainer","config","Cookie","LoaderButton","Home","props","staples","setStaples","nextStaple","setNextStaple","isLoading","setIsLoading","renderStapleView","astaples","list","undefined","map","staple","id","name","Date","created_at","toLocaleString","s","content","renderLander","renderStaples","onLoad","isAuthenticated","fetch","HOST","method","headers","get","then","response","json","data","catch","e","alert","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {FormControl, FormGroup, ListGroup, ListGroupItem, PageHeader} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport \"./Home.css\";\nimport config from \"../config\";\nimport Cookie from \"js-cookie\";\nimport LoaderButton from \"../components/LoaderButton\";\n\nexport default function Home(props) {\n  const [staples, setStaples] = useState([]);\n  const [nextStaple, setNextStaple] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  function renderStapleView(astaples) {\n    let list = undefined;\n    if (astaples.staples) {\n      list = astaples.staples.map(staple => {\n        return (<LinkContainer key={staple.id} to={`/staples/${staple.id}`}>\n          <ListGroupItem header={staple.name} key={staple.id}>\n            {\"Created: \" + new Date(staple.created_at).toLocaleString()}\n          </ListGroupItem>\n        </LinkContainer>)\n      })\n    }\n    let s = {};\n    if (nextStaple.staple) {\n      s = (\n        <div className=\"Staples\">\n          {staple && (\n            <form>\n              <FormGroup controlId=\"content\">\n                <FormControl\n                  plaintext={nextStaple.staple.content}\n                  readOnly\n                  defaultValue={nextStaple.staple.content}\n                />\n              </FormGroup>\n              <LoaderButton\n                block\n                bsSize=\"large\"\n                bsStyle=\"warning\"\n                // onClick={handleArchive}\n                // isLoading={isLoading}\n              >\n                Archive\n              </LoaderButton>\n              <LoaderButton\n                block\n                bsSize=\"large\"\n                bsStyle=\"danger\"\n                // onClick={handleDelete}\n                // isLoading={isDeleting}\n              >\n                Delete\n              </LoaderButton>\n            </form>\n          )}\n        </div>\n      )\n    }\n    return (\n      <div>\n        <div>\n          {s}\n        </div>\n      <div>\n        {list}\n        <LinkContainer key=\"new\" to=\"/staples/new\">\n          <ListGroupItem>\n            <h4>\n              <b>{\"\\uFF0B\"}</b> Create a new staple\n            </h4>\n          </ListGroupItem>\n        </LinkContainer>\n      </div>\n      </div>\n    )\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>Staple</h1>\n        <p>A stack based bookmark.</p>\n      </div>\n    );\n  }\n\n  function renderStaples() {\n    return (\n      <div className=\"staples\">\n        <PageHeader>Your Staples</PageHeader>\n        <ListGroup>\n          {!isLoading && renderStapleView(staples)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n\n      try {\n        fetch(config.HOST+\"/rest/api/1/staple\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token'),\n          },\n        }).then(response => response.json())\n          .then(data => setStaples(data))\n          .catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      try {\n        fetch(config.HOST+\"/rest/api/1/staple/next\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + Cookie.get('token'),\n          },\n        }).then(response => response.json())\n          .then(data => setNextStaple(data))\n          .catch(e => alert(e.message));\n      } catch (e) {\n        alert(e);\n      }\n\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, [props.isAuthenticated]);\n\n  return (\n    <div className=\"Home\">\n      {props.isAuthenticated ? renderStaples() : renderLander()}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}