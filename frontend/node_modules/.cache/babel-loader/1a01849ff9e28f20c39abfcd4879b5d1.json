{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js\";\nimport React, { useState } from \"react\";\nimport { Button, ControlLabel, FormControl, FormGroup } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport LoaderButton from \"../components/LoaderButton\";\nexport default function Settings(props) {\n  const _useFormFields = useFormFields({\n    maximumStaples: 25\n  }),\n        _useFormFields2 = _slicedToArray(_useFormFields, 2),\n        fields = _useFormFields2[0],\n        handleFieldChange = _useFormFields2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  function handleSubmitClick() {\n    setIsLoading(true);\n  }\n\n  function validateForm() {\n    return true;\n  }\n\n  function resetPassword() {\n    console.log(\"Password reset clicke.\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"SettingsForm\",\n    onSubmit: handleSubmitClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    bsSize: \"large\",\n    controlId: \"storage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Storage\"), React.createElement(FormControl, {\n    min: \"0\",\n    type: \"number\",\n    value: fields.maximumStaples,\n    onChange: handleFieldChange,\n    placeholder: \"Number of maximum staples to store\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    onClick: resetPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Reset Password\"));\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js"],"names":["React","useState","Button","ControlLabel","FormControl","FormGroup","useFormFields","LoaderButton","Settings","props","maximumStaples","fields","handleFieldChange","isLoading","setIsLoading","handleSubmitClick","validateForm","resetPassword","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,YAAhB,EAA8BC,WAA9B,EAA2CC,SAA3C,QAA2D,iBAA3D;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,yBACFH,aAAa,CAAC;AAChDI,IAAAA,cAAc,EAAE;AADgC,GAAD,CADX;AAAA;AAAA,QAC/BC,MAD+B;AAAA,QACvBC,iBADuB;;AAAA,oBAIJX,QAAQ,CAAC,KAAD,CAJJ;AAAA;AAAA,QAI/BY,SAJ+B;AAAA,QAIpBC,YAJoB;;AAMtC,WAASC,iBAAT,GAA6B;AAC3BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASE,YAAT,GAAwB;AACtB,WAAO,IAAP;AACD;;AAED,WAASC,aAAT,GAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEJ,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAC,GADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEJ,MAAM,CAACD,cAHhB;AAIE,IAAA,QAAQ,EAAEE,iBAJZ;AAKE,IAAA,WAAW,EAAC,oCALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,QAAQ,EAAE,CAACG,YAAY,EALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,CADF,CADF,EAyBE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,SAAS,EAAEH,SAJb;AAKE,IAAA,OAAO,EAAEI,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBF,CADF;AAqCD","sourcesContent":["import React, { useState } from \"react\";\nimport {Button, ControlLabel, FormControl, FormGroup} from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport LoaderButton from \"../components/LoaderButton\";\n\nexport default function Settings(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    maximumStaples: 25,\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmitClick() {\n    setIsLoading(true);\n  }\n\n  function validateForm() {\n    return true\n  }\n\n  function resetPassword() {\n    console.log(\"Password reset clicke.\")\n  }\n\n  return (\n    <>\n      <div>\n        <form className=\"SettingsForm\" onSubmit={handleSubmitClick}>\n          <FormGroup bsSize=\"large\" controlId=\"storage\">\n            <ControlLabel>Storage</ControlLabel>\n            <FormControl\n              min=\"0\"\n              type=\"number\"\n              value={fields.maximumStaples}\n              onChange={handleFieldChange}\n              placeholder=\"Number of maximum staples to store\"\n            />\n          </FormGroup>\n          <hr />\n          <LoaderButton\n            block\n            type=\"submit\"\n            bsSize=\"large\"\n            isLoading={isLoading}\n            disabled={!validateForm()}\n          >\n            Save\n          </LoaderButton>\n        </form>\n      </div>\n      <LoaderButton\n        block\n        type=\"submit\"\n        bsSize=\"large\"\n        isLoading={isLoading}\n        onClick={resetPassword}\n      >\n        Reset Password\n      </LoaderButton>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}