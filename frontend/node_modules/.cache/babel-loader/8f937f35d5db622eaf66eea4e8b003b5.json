{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js\";\nimport React, { useState } from \"react\";\nimport { Col, ControlLabel, FormControl, FormGroup, Grid, Row } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nexport default function Settings(props) {\n  const _useFormFields = useFormFields({\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useFormFields2 = _slicedToArray(_useFormFields, 2),\n        fields = _useFormFields2[0],\n        handleFieldChange = _useFormFields2[1];\n\n  const _useState = useState(25),\n        _useState2 = _slicedToArray(_useState, 2),\n        maxStaples = _useState2[0],\n        setMaxStaples = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    console.log(\"Maximum set to: \", maxStaples);\n    setIsLoading(false);\n  }\n\n  function validateChangePasswordForm() {\n    return fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  async function handleChangePasswordSubmit(event) {\n    event.preventDefault();\n    console.log(\"Changing password: \", fields.password, fields.confirmPassword);\n  }\n\n  function editMaxStaples(event) {\n    setMaxStaples(event.target.value);\n  }\n\n  function validateForm() {\n    return true;\n  }\n\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"show-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"SettingsForm\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    bsSize: \"large\",\n    controlId: \"storage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Maximum Staples\"), React.createElement(FormControl, {\n    min: \"0\",\n    type: \"number\",\n    value: maxStaples,\n    onChange: editMaxStaples,\n    placeholder: \"Number of maximum staples to store\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Col, {\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"ChangePasswordForm\",\n    onSubmit: handleChangePasswordSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Password\"), React.createElement(FormControl, {\n    type: \"password\",\n    value: fields.password,\n    onChange: handleFieldChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"confirmPassword\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(FormControl, {\n    type: \"password\",\n    onChange: handleFieldChange,\n    value: fields.confirmPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateChangePasswordForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Change\")))));\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js"],"names":["React","useState","Col","ControlLabel","FormControl","FormGroup","Grid","Row","LoaderButton","useFormFields","Settings","props","password","confirmPassword","fields","handleFieldChange","maxStaples","setMaxStaples","isLoading","setIsLoading","handleSubmit","event","preventDefault","console","log","validateChangePasswordForm","length","handleChangePasswordSubmit","editMaxStaples","target","value","validateForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {Col, ControlLabel, FormControl, FormGroup, Grid, Row} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport {useFormFields} from \"../libs/hooksLib\";\n\nexport default function Settings(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [maxStaples, setMaxStaples] = useState(25);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    console.log(\"Maximum set to: \", maxStaples);\n    setIsLoading(false);\n  }\n\n  function validateChangePasswordForm() {\n    return (\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleChangePasswordSubmit(event) {\n    event.preventDefault();\n    console.log(\"Changing password: \", fields.password, fields.confirmPassword);\n  }\n\n  function editMaxStaples(event) {\n    setMaxStaples(event.target.value)\n  }\n\n  function validateForm() {\n    return true\n  }\n\n  return (\n    <Grid>\n      <Row className=\"show-grid\">\n        <Col xs={12} md={8}>\n          <form className=\"SettingsForm\" onSubmit={handleSubmit}>\n            <FormGroup bsSize=\"large\" controlId=\"storage\">\n              <ControlLabel>Maximum Staples</ControlLabel>\n              <FormControl\n                min=\"0\"\n                type=\"number\"\n                value={maxStaples}\n                onChange={editMaxStaples}\n                placeholder=\"Number of maximum staples to store\"\n              />\n            </FormGroup>\n            <hr />\n            <LoaderButton\n              block\n              type=\"submit\"\n              bsSize=\"large\"\n              isLoading={isLoading}\n              disabled={!validateForm()}\n            >\n              Save\n            </LoaderButton>\n          </form>\n        </Col>\n        <Col xs={6} md={4}>\n          <form className=\"ChangePasswordForm\" onSubmit={handleChangePasswordSubmit}>\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              <ControlLabel>Password</ControlLabel>\n              <FormControl\n                type=\"password\"\n                value={fields.password}\n                onChange={handleFieldChange}\n              />\n            </FormGroup>\n            <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n              <ControlLabel>Confirm Password</ControlLabel>\n              <FormControl\n                type=\"password\"\n                onChange={handleFieldChange}\n                value={fields.confirmPassword}\n              />\n            </FormGroup>\n            <hr />\n            <LoaderButton\n              block\n              type=\"submit\"\n              bsSize=\"large\"\n              isLoading={isLoading}\n              disabled={!validateChangePasswordForm()}\n            >\n              Change\n            </LoaderButton>\n          </form>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}