{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/AddStaple.js\";\nimport React, { useRef, useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./AddStaple.css\";\nimport config from \"../config\";\nexport default function AddStaple(props) {\n  const file = useRef(null);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    // Call the api to create a staple.\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000} MB.`);\n      return;\n    }\n\n    try {\n      await createStaple({\n        content\n      });\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  function createStaple(staple) {\n    return {\n      \"message\": \"all good\"\n    }; // return API.post(\"notes\", \"/notes\", {\n    //   body: note\n    // });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"AddStaple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    value: content,\n    componentClass: \"textarea\",\n    onChange: e => setContent(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Attachment\"), React.createElement(FormControl, {\n    onChange: handleFileChange,\n    type: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    bsStyle: \"primary\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Create\")));\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/AddStaple.js"],"names":["React","useRef","useState","FormGroup","FormControl","ControlLabel","LoaderButton","config","AddStaple","props","file","content","setContent","isLoading","setIsLoading","validateForm","length","handleFileChange","event","current","target","files","handleSubmit","preventDefault","size","MAX_ATTACHMENT_SIZE","alert","createStaple","history","push","e","staple","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./AddStaple.css\";\nimport config from \"../config\";\n\nexport default function AddStaple(props) {\n  const file = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    // Call the api to create a staple.\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n          1000000} MB.`\n      );\n      return;\n    }\n    try {\n      await createStaple({ content });\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  function createStaple(staple) {\n    return {\"message\": \"all good\"}\n    // return API.post(\"notes\", \"/notes\", {\n    //   body: note\n    // });\n  }\n\n  return (\n    <div className=\"AddStaple\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"file\">\n          <ControlLabel>Attachment</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}