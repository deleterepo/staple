{"ast":null,"code":"import _slicedToArray from \"/Users/skarlso/goprojects/staple/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js\";\nimport React, { useState } from \"react\";\nimport { ControlLabel, FormControl, FormGroup } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nexport default function Settings(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  function setMaximumStaples(details) {// return API.post(\"notes\", \"/billing\", {\n    //   body: details\n    // });\n  }\n\n  function handleSubmitClick() {}\n\n  return React.createElement(\"form\", {\n    className: \"SettingsForm\",\n    onSubmit: handleSubmitClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    bsSize: \"large\",\n    controlId: \"storage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Storage\"), React.createElement(FormControl, {\n    min: \"0\",\n    type: \"number\",\n    value: fields.storage,\n    onChange: handleFieldChange,\n    placeholder: \"Number of notes to store\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    bsSize: \"large\",\n    controlId: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Cardholder's name\"), React.createElement(FormControl, {\n    type: \"text\",\n    value: fields.name,\n    onChange: handleFieldChange,\n    placeholder: \"Name on the card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Credit Card Info\"), React.createElement(CardElement, {\n    className: \"card-field\",\n    onChange: e => setIsCardComplete(e.complete),\n    style: {\n      base: {\n        fontSize: \"18px\",\n        fontFamily: '\"Open Sans\", sans-serif'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Purchase\"));\n}","map":{"version":3,"sources":["/Users/skarlso/goprojects/staple/frontend/src/containers/Settings.js"],"names":["React","useState","ControlLabel","FormControl","FormGroup","useFormFields","Settings","props","isLoading","setIsLoading","setMaximumStaples","details","handleSubmitClick","fields","storage","handleFieldChange","name","e","setIsCardComplete","complete","base","fontSize","fontFamily","validateForm"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,YAAR,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAmD,iBAAnD;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,oBACJN,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,QAC/BO,SAD+B;AAAA,QACpBC,YADoB;;AAGtC,WAASC,iBAAT,CAA2BC,OAA3B,EAAoC,CAClC;AACA;AACA;AACD;;AAED,WAASC,iBAAT,GAA6B,CAE5B;;AAED,SACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEA,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAC,GADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEC,MAAM,CAACC,OAHhB;AAIE,IAAA,QAAQ,EAAEC,iBAJZ;AAKE,IAAA,WAAW,EAAC,0BALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACG,IAFhB;AAGE,IAAA,QAAQ,EAAED,iBAHZ;AAIE,IAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,EAqBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBF,EAsBE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,QAAQ,EAAEE,CAAC,IAAIC,iBAAiB,CAACD,CAAC,CAACE,QAAH,CAFlC;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC;AADD,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EA6BE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,SAAS,EAAEd,SAJb;AAKE,IAAA,QAAQ,EAAE,CAACe,YAAY,EALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,CADF;AAyCD","sourcesContent":["import React, { useState } from \"react\";\nimport {ControlLabel, FormControl, FormGroup} from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\n\nexport default function Settings(props) {\n  const [isLoading, setIsLoading] = useState(false);\n\n  function setMaximumStaples(details) {\n    // return API.post(\"notes\", \"/billing\", {\n    //   body: details\n    // });\n  }\n\n  function handleSubmitClick() {\n\n  }\n\n  return (\n    <form className=\"SettingsForm\" onSubmit={handleSubmitClick}>\n      <FormGroup bsSize=\"large\" controlId=\"storage\">\n        <ControlLabel>Storage</ControlLabel>\n        <FormControl\n          min=\"0\"\n          type=\"number\"\n          value={fields.storage}\n          onChange={handleFieldChange}\n          placeholder=\"Number of notes to store\"\n        />\n      </FormGroup>\n      <hr />\n      <FormGroup bsSize=\"large\" controlId=\"name\">\n        <ControlLabel>Cardholder&apos;s name</ControlLabel>\n        <FormControl\n          type=\"text\"\n          value={fields.name}\n          onChange={handleFieldChange}\n          placeholder=\"Name on the card\"\n        />\n      </FormGroup>\n      <ControlLabel>Credit Card Info</ControlLabel>\n      <CardElement\n        className=\"card-field\"\n        onChange={e => setIsCardComplete(e.complete)}\n        style={{\n          base: { fontSize: \"18px\", fontFamily: '\"Open Sans\", sans-serif' }\n        }}\n      />\n      <LoaderButton\n        block\n        type=\"submit\"\n        bsSize=\"large\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Purchase\n      </LoaderButton>\n    </form>\n  );\n}"]},"metadata":{},"sourceType":"module"}